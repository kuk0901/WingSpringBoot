<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.edu.wing.accountbook">

    <resultMap id="accountBookResultMap" type="AccountBookVo">
        <id property="accountBookNo" column="ACCOUNT_BOOK_NO"/>
        <result property="plusCategoryNo" column="PLUS_CATEGORY_NO"/>
        <result property="minusCategoryNo" column="MINUS_CATEGORY_NO"/>
        <result property="memberNo" column="MEMBER_NO"/>
        <result property="paymentMethodNo" column="PAYMENT_METHOD_NO"/>
        <result property="creDate" column="CRE_DATE"/>
        <result property="content" column="CONTENT"/>
        <result property="paymentAmount" column="PAYMENT_AMOUNT"/>
        <result property="minusCategoryName" column="MINUS_CATEGORY_NAME"/>
        <result property="memberEmail" column="MEMBER_EMAIL"/>
        <result property="paymentMethodName" column="PAYMENT_METHOD_NAME"/>
        <result property="plusCategoryName" column="PLUS_CATEGORY_NAME"/>
    </resultMap>
  
    <!-- 밑에3개는 추후수정-->

    <select id="selectAccountBook" resultType="AccountBookVo">
        SELECT ab.ACCOUNT_BOOK_NO,
               mc.CATEGORY_NAME AS MINUS_CATEGORY_NAME, -- MINUS_CATEGORY의 CATEGORY_NAME
               m.EMAIL          AS MEMBER_EMAIL,        -- MEMBER 테이블의 EMAIL
               pm.PAYMENT_METHOD_NAME,                  -- PAYMENT_METHOD의 PAYMENT_METHOD_NAME
               ab.CRE_DATE,
               ab.PAYMENT_AMOUNT
        FROM ACCOUNT_BOOK ab
                 LEFT JOIN MINUS_CATEGORY mc ON ab.MINUS_CATEGORY_NO = mc.CATEGORY_NO
                 LEFT JOIN MEMBER m ON ab.MEMBER_NO = m.MEMBER_NO
                 LEFT JOIN PAYMENT_METHOD pm ON ab.PAYMENT_METHOD_NO = pm.PAYMENT_METHOD_NO
        where ab.PLUS_CATEGORY_NO = 1 -- PLUS_CATEGORY_NO가 1인 경우
        ORDER BY ACCOUNT_BOOK_NO
    </select>


    <select id="selectMinusCategories" resultType="String">
        SELECT CATEGORY_NAME
        FROM MINUS_CATEGORY
    </select>
  
    <select id="selectPlusCategories" resultType="String">
        SELECT CATEGORY_NAME
        FROM PLUS_CATEGORY
    </select>

    <select id="selectPaymentMethods" resultType="String">
        SELECT PAYMENT_METHOD_NAME
        FROM PAYMENT_METHOD
    </select>

    <select id="selectAccountBooks" parameterType="map" resultMap="accountBookResultMap">
        SELECT ab.ACCOUNT_BOOK_NO,
               mc.CATEGORY_NAME AS MINUS_CATEGORY_NAME, -- MINUS_CATEGORY의 CATEGORY_NAME
               m.EMAIL          AS MEMBER_EMAIL,        -- MEMBER 테이블의 EMAIL
               pm.PAYMENT_METHOD_NAME,                  -- PAYMENT_METHOD의 PAYMENT_METHOD_NAME
               ab.CRE_DATE,
               ab.PAYMENT_AMOUNT
        FROM ACCOUNT_BOOK ab
                 LEFT JOIN MINUS_CATEGORY mc ON ab.MINUS_CATEGORY_NO = mc.CATEGORY_NO
                 LEFT JOIN MEMBER m ON ab.MEMBER_NO = m.MEMBER_NO
                 LEFT JOIN PAYMENT_METHOD pm ON ab.PAYMENT_METHOD_NO = pm.PAYMENT_METHOD_NO
        WHERE (#{category} = 'all' OR mc.CATEGORY_NAME = #{category})
          AND (#{paymentMethod} = 'all' OR pm.PAYMENT_METHOD_NAME = #{paymentMethod})
          AND ab.PLUS_CATEGORY_NO = 1 --가계부 소비만출력
        ORDER BY ACCOUNT_BOOK_NO
    </select>

    <!-- 상위 3개 결제 방법 조회 쿼리 -->
    <select id="getTopPaymentMethods" resultType="AccountBookVo">
      <![CDATA[
          SELECT PAYMENT_METHOD_NAME, usage_count
          FROM (SELECT ab.PAYMENT_METHOD_NO,
                       pm.PAYMENT_METHOD_NAME,
                       COUNT(*) AS usage_count
                FROM ACCOUNT_BOOK ab
                         JOIN PAYMENT_METHOD pm ON ab.PAYMENT_METHOD_NO = pm.PAYMENT_METHOD_NO
                GROUP BY ab.PAYMENT_METHOD_NO, pm.PAYMENT_METHOD_NAME
                ORDER BY COUNT(*) DESC)
          WHERE ROWNUM <= 3
        ]]>
    </select>

    <select id="getTopCategories" resultType="AccountBookVo">
      <![CDATA[
            SELECT *
            FROM (SELECT mc.CATEGORY_NAME            AS minusCategoryName,
                         COUNT(ab.MINUS_CATEGORY_NO) AS usage_count
                  FROM ACCOUNT_BOOK ab
                           JOIN
                       MINUS_CATEGORY mc ON ab.MINUS_CATEGORY_NO = mc.CATEGORY_NO
                  GROUP BY mc.CATEGORY_NAME
                  ORDER BY COUNT(ab.MINUS_CATEGORY_NO) DESC)
            WHERE ROWNUM <= 3
        ]]>
    </select>
  

  
    <!--여기서부터 member영역-->
    <!--이건 날짜호출용-->
    <select id="selectAccountBookByMonth" resultType="AccountBookVo">
    <![CDATA[
        SELECT *
        FROM (
               SELECT ab.ACCOUNT_BOOK_NO,
                      ab.PLUS_CATEGORY_NO,
                      ab.MINUS_CATEGORY_NO,
                      ab.MEMBER_NO,
                      ab.PAYMENT_METHOD_NO,
                      ab.CRE_DATE,
                      ab.CONTENT,
                      ab.PAYMENT_AMOUNT,
                      mc.CATEGORY_NAME       AS minusCategoryName,
                      pc.CATEGORY_NAME       AS plusCategoryName,
                      pm.PAYMENT_METHOD_NAME AS paymentMethodName
               FROM ACCOUNT_BOOK ab
                        LEFT JOIN MINUS_CATEGORY mc ON ab.MINUS_CATEGORY_NO = mc.CATEGORY_NO
                        LEFT JOIN PLUS_CATEGORY pc ON ab.PLUS_CATEGORY_NO = pc.CATEGORY_NO
                        LEFT JOIN PAYMENT_METHOD pm ON ab.PAYMENT_METHOD_NO = pm.PAYMENT_METHOD_NO
               WHERE ab.CRE_DATE >= #{startDate}
                 AND ab.CRE_DATE < #{endDate}
                 AND ab.MEMBER_NO = #{memberNo}
               ORDER BY ab.CRE_DATE DESC -- 작성일 기준 내림차순 정렬
             )
        WHERE ROWNUM <= #{limit} -- 최근 N개 선택
        ]]>
    </select>
  
    <!--이건 초기화면용 최근몇개호출함-->
    <select id="selectAccountBookByRecentDate" resultType="AccountBookVo">
    <![CDATA[
        SELECT *
        FROM (SELECT ab.ACCOUNT_BOOK_NO, ab.PLUS_CATEGORY_NO, ab.MINUS_CATEGORY_NO, ab.MEMBER_NO, ab.PAYMENT_METHOD_NO
              , ab.CRE_DATE, ab.CONTENT, ab.PAYMENT_AMOUNT, mc.CATEGORY_NAME AS minusCategoryName
              , pc.CATEGORY_NAME AS plusCategoryName, pm.PAYMENT_METHOD_NAME AS paymentMethodName
              FROM ACCOUNT_BOOK ab
                 LEFT JOIN MINUS_CATEGORY mc ON ab.MINUS_CATEGORY_NO = mc.CATEGORY_NO
                 LEFT JOIN PLUS_CATEGORY pc ON ab.PLUS_CATEGORY_NO = pc.CATEGORY_NO
                 LEFT JOIN PAYMENT_METHOD pm ON ab.PAYMENT_METHOD_NO = pm.PAYMENT_METHOD_NO
              WHERE ab.MEMBER_NO = #{memberNo}
              ORDER BY ab.CRE_DATE DESC -- 작성일 기준 내림차순 정렬
             )
        WHERE ROWNUM <= #{limit} -- 최근 N개 선택
        ]]>
    </select>
  
    <!-- 월별 가계부 세기용 -->
    <select id="selectMonthlyEntryCount" resultType="int">
    <![CDATA[
        SELECT COUNT(*)
        FROM ACCOUNT_BOOK ab
        WHERE ab.CRE_DATE >= #{startDate}
          AND ab.CRE_DATE < #{endDate}
          AND ab.MEMBER_NO = #{memberNo}
        ]]>
    </select>

    <!-- 월별 가계부 총지출/수입내역 가져오기 -->
    <select id="getMonthlyEntries" parameterType="map" resultType="AccountBookVo">
        <![CDATA[
          SELECT
              ab.PLUS_CATEGORY_NO,
              ab.MINUS_CATEGORY_NO,
              ab.PAYMENT_AMOUNT
          FROM ACCOUNT_BOOK ab
          WHERE ab.CRE_DATE >= #{startDate}
            AND ab.CRE_DATE < #{endDate}
            AND ab.MEMBER_NO = #{memberNo}
        ]]>
    </select>
    <!-- 가계부 추가 -->
    <insert id="insertAccountBook" parameterType="map">
        INSERT INTO ACCOUNT_BOOK (ACCOUNT_BOOK_NO, PLUS_CATEGORY_NO, MINUS_CATEGORY_NO, MEMBER_NO, PAYMENT_METHOD_NO
            , CRE_DATE, CONTENT, PAYMENT_AMOUNT)
        VALUES (ACCOUNT_BOOK_NO_SEQ.NEXTVAL, #{plusCategoryNo}, #{minusCategoryNo}, #{memberNo}, #{paymentMethodNo}
            , #{creDate}, #{content}, #{paymentAmount})
    </insert>
        <!--디테일용-->
    <select id="selectAccountBookDetail" resultType="AccountBookVo">
      <![CDATA[
          SELECT ab.ACCOUNT_BOOK_NO,
                 ab.PLUS_CATEGORY_NO,
                 ab.MINUS_CATEGORY_NO,
                 ab.MEMBER_NO,
                 ab.PAYMENT_METHOD_NO,
                 ab.CRE_DATE,
                 ab.CONTENT,
                 ab.PAYMENT_AMOUNT,
                  mc.CATEGORY_NAME AS minusCategoryName, -- NULL인 경우 기본값
                 pc.CATEGORY_NAME AS plusCategoryName,  -- NULL인 경우 기본값
                 pm.PAYMENT_METHOD_NAME AS paymentMethodName
          FROM ACCOUNT_BOOK ab
                   LEFT JOIN MINUS_CATEGORY mc ON ab.MINUS_CATEGORY_NO = mc.CATEGORY_NO
                   LEFT JOIN PLUS_CATEGORY pc ON ab.PLUS_CATEGORY_NO = pc.CATEGORY_NO
                   LEFT JOIN PAYMENT_METHOD pm ON ab.PAYMENT_METHOD_NO = pm.PAYMENT_METHOD_NO
          WHERE ab.ACCOUNT_BOOK_NO = #{accountBookNo}
            AND ab.MEMBER_NO = #{memberNo}
          ]]>
    </select>

    <!-- 가계부 삭제 쿼리 -->
    <delete id="deleteAccountBook" parameterType="int">
        DELETE FROM ACCOUNT_BOOK WHERE ACCOUNT_BOOK_NO = #{accountBookNo}
    </delete>

    <!-- 업데이트 쿼리 -->
    <update id="updateAccountBook" parameterType="map">
        UPDATE ACCOUNT_BOOK
        SET
            PLUS_CATEGORY_NO = #{plusCategoryNo},
            MINUS_CATEGORY_NO = #{minusCategoryNo},
            PAYMENT_METHOD_NO = #{paymentMethodNo},
            CRE_DATE = #{creDate},
            CONTENT = #{content},
            PAYMENT_AMOUNT = #{paymentAmount}
        WHERE
            ACCOUNT_BOOK_NO = #{accountBookNo}
          AND MEMBER_NO = #{memberNo}
    </update>

</mapper>
